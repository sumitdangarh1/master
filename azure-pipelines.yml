# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

variables:
- name: MAVEN_CACHE_FOLDER
  value: $(Pipeline.Workspace)/.m2/repository
- name: MAVEN_OPTS
  value: -Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: DownloadSecureFile@1
  name: mvnSettingsFile
  inputs:
    secureFile: 'settings.xml'
    retryCount: '1'
- task: Cache@2
  inputs:
    key: maven | "$(Agent.OS)" | pom.xml
    path: $(MAVEN_CACHE_FOLDER)
    cacheHitVar: CacheRestored
    restoreKeys: >
      maven | "$(Agent.OS)"

      maven
  displayName: Cache Maven local repo
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: -Xmx3072m $(MAVEN_OPTS)
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    goals: 'deploy'
    options: '-s $(mvnSettingsFile.secureFilePath)'
# - task: Maven@3
  # inputs:
    # mavenPomFile: 'pom.xml'
    # mavenOptions: -Xmx3072m $(MAVEN_OPTS)
    # javaHomeOption: 'JDKVersion'
    # jdkVersionOption: '1.8'
    # jdkArchitectureOption: 'x64'
    # goals: 'deploy'
    # options: '-DmuleDeploy -s $(mvnSettingsFile.secureFilePath)'